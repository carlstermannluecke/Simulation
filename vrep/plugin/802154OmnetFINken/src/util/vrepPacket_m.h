//
// Generated file, do not edit! Created by nedtool 4.6 from util/vrepPacket.msg.
//

#ifndef _VREPPACKET_M_H_
#define _VREPPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "vrep802154conf.h"
	#include "mcpsData_m.h"
// }}

/**
 * Class generated from <tt>util/vrepPacket.msg:12</tt> by nedtool.
 * <pre>
 * message vrepMacPacket
 * {
 *     macAddrDataype destAddr;
 *     payloadVector payload;
 * }
 * </pre>
 */
class vrepMacPacket : public ::cMessage
{
  protected:
    macAddrDataype destAddr_var;
    payloadVector payload_var;

  private:
    void copy(const vrepMacPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const vrepMacPacket&);

  public:
    vrepMacPacket(const char *name=NULL, int kind=0);
    vrepMacPacket(const vrepMacPacket& other);
    virtual ~vrepMacPacket();
    vrepMacPacket& operator=(const vrepMacPacket& other);
    virtual vrepMacPacket *dup() const {return new vrepMacPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual macAddrDataype& getDestAddr();
    virtual const macAddrDataype& getDestAddr() const {return const_cast<vrepMacPacket*>(this)->getDestAddr();}
    virtual void setDestAddr(const macAddrDataype& destAddr);
    virtual payloadVector& getPayload();
    virtual const payloadVector& getPayload() const {return const_cast<vrepMacPacket*>(this)->getPayload();}
    virtual void setPayload(const payloadVector& payload);
};

inline void doPacking(cCommBuffer *b, vrepMacPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, vrepMacPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _VREPPACKET_M_H_

