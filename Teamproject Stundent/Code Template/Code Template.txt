-- DO NOT WRITE CODE OUTSIDE OF THE if-then-end SECTIONS BELOW!! (unless the code is a function definition)

-- Control States - This is for the state-machine, you can also add custom states.
local Control_State = { DEFAULT='DEFAULT_STATE', STATE1='STATE1'}

-- Constants

-- Functions - write your custom funtions here 

-- Use this function to switch between states
function ChangeControlState(controlState)
	-- You can write here some code which is axecuted just once.
	-- An example could be the initialization of some variables for a state.
	simAddStatusbarMessage(controlState)
	currentState = controlState
end

-- Simulation callbacks
if (sim_call_type==sim_childscriptcall_initialization) then

	-- Put some initialization code here
	
	-- this is the handle/ID of the copter - the last string is its name in hierarchy
	SimFinken = simGetObjectHandle("SimFinken")

	-- called with handle ID from above
	finkenScript = simGetScriptAssociatedWithObject(SimFinken)

	ChangeControlState(Control_State.DEFAULT)
end


if (sim_call_type==sim_childscriptcall_actuation) then

	------------------------------------------------------------
	if (currentState == Control_State.DEFAULT) then
		
	end
	------------------------------------------------------------
	if (currentState == Control_State.STATE1) then

	end
	------------------------------------------------------------
end


if (sim_call_type==sim_childscriptcall_sensing) then

	-- Put your main SENSING code here

end


if (sim_call_type==sim_childscriptcall_cleanup) then

	-- Put some restoration code here

end